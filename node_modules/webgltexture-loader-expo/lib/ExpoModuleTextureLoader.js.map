{"version":3,"sources":["../src/ExpoModuleTextureLoader.js"],"names":["neverEnding","Promise","hash","module","uri","localAsset","asset","Asset","fromModule","downloadAsync","then","remoteAssetCache","remoteAsset","i","lastIndexOf","ext","slice","key","resolve","promise","all","success","failure","Image","getSize","width","height","FileSystem","documentDirectory","cache","size","localUri","localFile","loadAsset","startsWith","ExpoModuleTextureLoader","WebGLTextureLoaderAsyncHashCache","WeakMap","canLoad","input","inputHash","loadNoCache","gl","disposed","dispose","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","globalRegistry","add"],"mappings":"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","sourcesContent":["//@flow\nimport {\n  globalRegistry,\n  WebGLTextureLoaderAsyncHashCache\n} from \"webgltexture-loader\";\nimport { Image } from \"react-native\";\nimport * as FileSystem from \"expo-file-system\";\nimport { Asset } from \"expo-asset\";\n\nimport md5 from \"./md5\";\n\nconst neverEnding = new Promise(() => {});\n\ntype AssetModel = {\n  width: number,\n  height: number,\n  uri: string,\n  localUri: string\n};\n\nconst hash = (module: number | { uri: string }) =>\n  typeof module === \"number\" ? module : module.uri;\n\nconst localAsset = (module: number) => {\n  const asset = Asset.fromModule(module);\n  return asset.downloadAsync().then(() => asset);\n};\n\nconst remoteAssetCache = {};\n\nconst remoteAsset = (uri: string) => {\n  const i = uri.lastIndexOf(\".\");\n  const ext = i !== -1 ? uri.slice(i) : \".jpg\";\n  const key = md5(uri);\n  if (key in remoteAssetCache) {\n    return Promise.resolve(remoteAssetCache[key]);\n  }\n  const promise = Promise.all([\n    new Promise((success, failure) =>\n      Image.getSize(uri, (width, height) => success({ width, height }), failure)\n    ),\n    FileSystem.downloadAsync(\n      uri,\n      FileSystem.documentDirectory + `ExponentAsset-${key}${ext}`,\n      {\n        cache: true\n      }\n    )\n  ]).then(([size, asset]) => ({ ...size, uri, localUri: asset.uri }));\n  remoteAssetCache[key] = promise;\n  return promise;\n};\n\nconst localFile = (uri: string) => {\n  const i = uri.lastIndexOf(\".\");\n  const ext = i !== -1 ? uri.slice(i) : \".jpg\";\n  const key = md5(uri);\n  if (key in remoteAssetCache) {\n    return Promise.resolve(remoteAssetCache[key]);\n  }\n  const promise = new Promise((success, failure) =>\n    Image.getSize(uri, (width, height) => success({ width, height }), failure)\n  ).then(size => ({ ...size, uri, localUri: uri }));\n  remoteAssetCache[key] = promise;\n  return promise;\n};\n\nexport const loadAsset = (\n  module: number | { uri: string }\n): Promise<AssetModel> =>\n  typeof module === \"number\"\n    ? localAsset(module)\n    : module.uri.startsWith(\"file:\") ||\n      module.uri.startsWith(\"data:\") ||\n      module.uri.startsWith(\"asset:\") || // All local paths in Android Expo standalone app\n      module.uri.startsWith(\"assets-library:\") || // CameraRoll.getPhotos iOS\n      module.uri.startsWith(\"content:\") || // CameraRoll.getPhotos Android\n      module.uri.startsWith(\"/\") // Expo.takeSnapshotAsync in DEV in Expo 31\n    ? localFile(module.uri)\n    : remoteAsset(module.uri);\n\nclass ExpoModuleTextureLoader extends WebGLTextureLoaderAsyncHashCache<\n  number | { uri: string }\n> {\n  objIds: WeakMap<WebGLTexture, number> = new WeakMap();\n\n  canLoad(input: any) {\n    return (\n      typeof input === \"number\" ||\n      (input && typeof input === \"object\" && typeof input.uri === \"string\")\n    );\n  }\n\n  inputHash(module: *) {\n    return typeof module === \"number\" ? module : module.uri;\n  }\n\n  loadNoCache(module: *) {\n    const { gl } = this;\n    let disposed = false;\n    const dispose = () => {\n      disposed = true;\n    };\n    const promise = loadAsset(module).then(asset => {\n      if (disposed) return neverEnding;\n      const { width, height } = asset;\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      // $FlowFixMe\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        width,\n        height,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        asset\n      );\n      return { texture, width, height };\n    });\n    return { promise, dispose };\n  }\n}\n\nglobalRegistry.add(ExpoModuleTextureLoader);\n\nexport default ExpoModuleTextureLoader;\n"],"file":"ExpoModuleTextureLoader.js"}